;; -*- lexical-binding: t -*-
;;
;;; Token type constants

(eval-when-compile (require 'names))

(define-namespace token-

(defconst ENDMARKER 0)
(defconst NAME 1)
(defconst NUMBER 2)
(defconst STRING 3)
(defconst NEWLINE 4)
(defconst INDENT 5)
(defconst DEDENT 6)
(defconst LPAR 7)
(defconst RPAR 8)
(defconst LSQB 9)
(defconst RSQB 10)
(defconst COLON 11)
(defconst COMMA 12)
(defconst SEMI 13)
(defconst PLUS 14)
(defconst MINUS 15)
(defconst STAR 16)
(defconst SLASH 17)
(defconst VBAR 18)
(defconst AMPER 19)
(defconst LESS 20)
(defconst GREATER 21)
(defconst EQUAL 22)
(defconst DOT 23)
(defconst PERCENT 24)
(defconst BACKQUOTE 25)
(defconst LBRACE 26)
(defconst RBRACE 27)
(defconst EQEQUAL 28)
(defconst NOTEQUAL 29)
(defconst LESSEQUAL 30)
(defconst GREATEREQUAL 31)
(defconst TILDE 32)
(defconst CIRCUMFLEX 33)
(defconst LEFTSHIFT 34)
(defconst RIGHTSHIFT 35)
(defconst DOUBLESTAR 36)
(defconst PLUSEQUAL 37)
(defconst MINEQUAL 38)
(defconst STAREQUAL 39)
(defconst SLASHEQUAL 40)
(defconst PERCENTEQUAL 41)
(defconst AMPEREQUAL 42)
(defconst VBAREQUAL 43)
(defconst CIRCUMFLEXEQUAL 44)
(defconst LEFTSHIFTEQUAL 45)
(defconst RIGHTSHIFTEQUAL 46)
(defconst DOUBLESTAREQUAL 47)
(defconst DOUBLESLASH 48)
(defconst DOUBLESLASHEQUAL 49)
(defconst AT 50)
(defconst ATEQUAL 51)
(defconst OP 52)
(defconst COMMENT 53)
(defconst NL 54)
(defconst RARROW 55)
(defconst ERRORTOKEN 56)
(defconst N-TOKENS 57)
(defconst NT-OFFSET 256)

(defun ISTERMINAL (x)
  (< x NT-OFFSET))
(defun ISNONTERMINAL (x)
  (>= x NT-OFFSET))
(defun ISEOF (x)
  (== x ENDMARKER))

) ;; token- namepsace end

(provide 'token)
