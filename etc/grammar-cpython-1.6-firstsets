small_stmt ==>	 ["'return'", "'assert'", 'NAME', "'not'", "'pass'", "'-'", 'NUMBER', "'('", "'break'", "'continue'", "'+'", 'STRING']
return_stmt ==>	 ["'return'"]
not_test ==>	 ["'('", 'NAME', "'not'", "'-'", 'NUMBER', "'+'", 'STRING']
flow_stmt ==>	 ["'break'", "'continue'", "'return'"]
comp_op ==>	 ["'!='", "'>'", "'<>'", "'=='", "'<='", "'>='", "'<'"]
parameters ==>	 ["'('"]
single_input ==>	 ["'return'", "'assert'", 'NAME', "'if'", "'not'", "'pass'", 'NEWLINE', "'-'", 'NUMBER', "'def'", "'('", "'while'", "'break'", "'continue'", "'+'", 'STRING']
factor ==>	 ['NAME', "'-'", 'NUMBER', "'('", "'+'", 'STRING']
test ==>	 ["'('", 'NAME', "'not'", "'-'", 'NUMBER', "'+'", 'STRING']
suite ==>	 ["'return'", "'assert'", 'NAME', "'not'", "'pass'", 'NEWLINE', "'-'", 'NUMBER', "'('", "'break'", "'continue'", "'+'", 'STRING']
compound_stmt ==>	 ["'while'", "'def'", "'if'"]
power ==>	 ['NUMBER', "'('", 'STRING', 'NAME']
simple_stmt ==>	 ["'return'", "'assert'", 'NAME', "'not'", "'pass'", "'-'", 'NUMBER', "'('", "'break'", "'continue'", "'+'", 'STRING']
testlist ==>	 ["'('", 'NAME', "'not'", "'-'", 'NUMBER', "'+'", 'STRING']
and_test ==>	 ["'('", 'NAME', "'not'", "'-'", 'NUMBER', "'+'", 'STRING']
assert_stmt ==>	 ["'assert'"]
stmt ==>	 ["'return'", "'assert'", 'NAME', "'if'", "'not'", "'pass'", "'-'", 'NUMBER', "'def'", "'('", "'while'", "'break'", "'continue'", "'+'", 'STRING']
atom ==>	 ['STRING', "'('", 'NAME', 'NUMBER']
funcdef ==>	 ["'def'"]
expr_stmt ==>	 ["'('", 'NAME', "'not'", "'-'", 'NUMBER', "'+'", 'STRING']
exprlist ==>	 ["'('", 'NAME', "'-'", 'NUMBER', "'+'", 'STRING']
comparison ==>	 ["'('", 'NAME', "'-'", 'NUMBER', "'+'", 'STRING']
term ==>	 ["'('", 'NAME', "'-'", 'NUMBER', "'+'", 'STRING']
if_stmt ==>	 ["'if'"]
expr ==>	 ["'('", 'NAME', "'-'", 'NUMBER', "'+'", 'STRING']
while_stmt ==>	 ["'while'"]
varargslist ==>	 ['NAME']
file_input ==>	 ['ENDMARKER', 'STRING', "'not'", 'NUMBER', "'def'", "'while'", "'return'", "'assert'", 'NAME', "'pass'", 'NEWLINE', "'-'", "'('", "'if'", "'break'", "'continue'", "'+'"]
