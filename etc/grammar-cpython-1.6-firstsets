small_stmt ==>	 ["'return'", "'assert'", 'STRING', "'del'", "'pass'", "'-'", 'NUMBER', "'['", "'break'", "'('", "'not'", "'print'", "'continue'", "'+'", 'NAME']
argument ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
fplist ==>	 ["'('", 'NAME']
return_stmt ==>	 ["'return'"]
not_test ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
arglist ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
break_stmt ==>	 ["'break'"]
comp_op ==>	 ["'!='", "'>'", "'=='", "'<>'", "'<='", "'>='", "'<'"]
parameters ==>	 ["'('"]
continue_stmt ==>	 ["'continue'"]
fpdef ==>	 ["'('", 'NAME']
single_input ==>	 ["'return'", "'if'", "'def'", "'assert'", 'STRING', "'break'", "'del'", "'pass'", 'NEWLINE', "'-'", 'NUMBER', "'['", "'not'", "'('", "'while'", "'print'", "'continue'", "'+'", 'NAME']
print_stmt ==>	 ["'print'"]
factor ==>	 ["'+'", "'('", 'STRING', "'-'", 'NUMBER', "'['", 'NAME']
test ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
suite ==>	 ["'return'", "'assert'", 'STRING', "'break'", "'del'", "'pass'", 'NEWLINE', "'-'", 'NUMBER', "'['", "'not'", "'('", "'print'", "'continue'", "'+'", 'NAME']
compound_stmt ==>	 ["'while'", "'def'", "'if'"]
flow_stmt ==>	 ["'break'", "'continue'", "'return'"]
power ==>	 ['STRING', "'('", 'NAME', "'['", 'NUMBER']
simple_stmt ==>	 ["'return'", "'assert'", 'STRING', "'print'", "'del'", "'pass'", "'-'", 'NUMBER', "'['", "'not'", "'('", "'break'", "'continue'", "'+'", 'NAME']
testlist ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
and_test ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
assert_stmt ==>	 ["'assert'"]
stmt ==>	 ["'return'", "'if'", "'def'", "'assert'", 'STRING', "'break'", "'del'", "'pass'", "'-'", 'NUMBER', "'['", "'not'", "'('", "'while'", "'print'", "'continue'", "'+'", 'NAME']
atom ==>	 ["'('", 'NAME', 'NUMBER', "'['", 'STRING']
funcdef ==>	 ["'def'"]
expr_stmt ==>	 ['STRING', "'not'", "'-'", 'NUMBER', "'['", "'('", "'+'", 'NAME']
exprlist ==>	 ["'+'", "'('", 'STRING', "'-'", 'NUMBER', "'['", 'NAME']
pass_stmt ==>	 ["'pass'"]
comparison ==>	 ["'+'", "'('", 'STRING', "'-'", 'NUMBER', "'['", 'NAME']
term ==>	 ["'('", 'STRING', "'['", "'-'", 'NUMBER', "'+'", 'NAME']
if_stmt ==>	 ["'if'"]
arith_expr ==>	 ["'+'", "'('", 'STRING', "'-'", 'NUMBER', "'['", 'NAME']
expr ==>	 ["'('", 'STRING', "'['", "'-'", 'NUMBER', "'+'", 'NAME']
del_stmt ==>	 ["'del'"]
while_stmt ==>	 ["'while'"]
varargslist ==>	 ["'('", 'NAME']
file_input ==>	 ['ENDMARKER', 'STRING', "'not'", 'NUMBER', "'def'", "'print'", "'while'", "'return'", "'assert'", 'NAME', "'del'", "'pass'", 'NEWLINE', "'-'", "'['", "'('", "'if'", "'break'", "'continue'", "'+'"]
