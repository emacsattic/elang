# Grammar for Python
#
# Extracted from the CPython 1.6 source and simplified as much as possible.
# Unlike the original it is used as a reference only.
#
single_input: NEWLINE | simple_stmt | compound_stmt NEWLINE
file_input: (NEWLINE | stmt)* ENDMARKER

funcdef: 'def' NAME parameters ':' suite
parameters: '(' [varargslist] ')'
varargslist: NAME (',' NAME )*

stmt: simple_stmt | compound_stmt
simple_stmt: small_stmt (';' small_stmt)* [';'] NEWLINE
small_stmt: expr_stmt |  flow_stmt | assert_stmt | global_stmt | 'pass'
expr_stmt: testlist [('=' testlist)]
# For assignments, additional restrictions enforced by the interpreter
flow_stmt: break_stm t| continue_stmt | return_stmt
break_stmt: 'break'
continue_stmt: 'continue'
return_stmt: 'return' [testlist]
global_stmt: 'global' NAME (',' NAME)*
assert_stmt: 'assert' test

compound_stmt: if_stmt | while_stmt | funcdef
if_stmt: 'if' test ':' suite ('elif' test ':' suite)* ['else' ':' suite]
while_stmt: 'while' test ':' suite
for_stmt: 'for' NAME 'in' testlist ':' suite
suite: simple_stmt | NEWLINE INDENT stmt+ DEDENT

test: and_test ('or' and_test)*
and_test: not_test ('and' not_test)*
not_test: 'not' not_test | comparison
comparison: expr (comp_op expr)*
comp_op: '<'|'>'|'=='|'>='|'<='|'<>'|'!='
expr: term (('+'|'-') term)*
term: factor (('*'|'/'|'%') factor)*
factor: ('+'|'-') factor | power
power: atom trailer* ('**' factor)*
trailer: '(' [testlist] ')'
atom: '(' [testlist] ')' | NAME | NUMBER | STRING
exprlist: expr (',' expr)*
testlist: test (',' test)*
